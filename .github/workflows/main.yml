name: Build and Test 
on: [push]
jobs:
  build:
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v1
      name: Checkout Code
     
    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.0.2
       
    - name: Setup NuGet
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: latest
     
    - name: Restore NuGet Packages
      run: nuget restore TudoMario.sln
 
    - name: Build Solution
      run: msbuild TudoMario.sln /p:Configuration=Debug /p:DeployOnBuild=true /p:PublishProfile=FolderProfile /p:AppxBundlePlatforms="x86" /p:AppxPackageDir=".\AppxPackages" /p:AppxBundle=Always

  test:
    #needs: [build]
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v1
      name: Checkout Code
     
    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
     
    - name: Restore NuGet Packages
      run: nuget restore TudoMario.sln
 
    - name: Build Solution
      run: msbuild TudoMario.sln /p:Configuration=Debug /p:DeployOnBuild=true /p:PublishProfile=FolderProfile /p:AppxBundlePlatforms="x86" /p:AppxPackageDir=".\AppxPackages" /p:AppxBundle=Always
    
    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1
      
    - name: Run Tests
      run: vstest.console.exe /Platform:x86 TudoMarioTests\bin\x86\Debug\TudoMarioTests.build.appxrecipe > testresult.txt
    
    - name: Print out Log File
      if: ${{ always() }}
      run: cat testresult.txt
 
    - name: Upload test-result Artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: testresult.txt

    - name: Upload build Artifact
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: TudoMario\bin\x86\Debug\
